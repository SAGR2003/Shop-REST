plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
    id("org.sonarqube") version "3.4.0.2513"
}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.8"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/dto/**",
                    "**/entity/*",
                    "**/model/*"
            ])
        }))
    }
}

dependencies {
    implementation("com.google.guava:guava:31.1-jre")
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:23.0.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'
}
sonarqube {
    properties {
        property("sonar.projectName", "shop-rest")
        property("sonar.host.url", "http://localhost:9000")
        property("sonar.login", "admin")
        property("sonar.password", "admin123")
    }
}
tasks.named('test') {
    useJUnitPlatform()
}